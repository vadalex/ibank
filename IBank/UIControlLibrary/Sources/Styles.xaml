<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:conv="clr-namespace:UIControlLibrary.Sources"
					xmlns:comp="clr-namespace:UIControlLibrary.Components"
					>

	<conv:AddParamConverter x:Key="conv"/>

	<ImageBrush ImageSource="logotype.png" x:Key="img" Opacity="0.025" >
		<ImageBrush.RelativeTransform>
			<TransformGroup>
				<ScaleTransform CenterY="0.5" CenterX="0.5" ScaleY="0.8" ScaleX="0.8"/>
				<SkewTransform CenterY="0.5" CenterX="0.5" AngleX="10" AngleY="10"/>
				<RotateTransform Angle="-45" CenterY="0.5" CenterX="0.5"/>
				<TranslateTransform/>
			</TransformGroup>
		</ImageBrush.RelativeTransform>
	</ImageBrush>
		

	
	<Style TargetType="{x:Type StackPanel}">
		<Setter Property="Background" Value="{StaticResource img}"/>
	</Style>
	
	<Style TargetType="{x:Type ScrollViewer}">
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>

		<!--<Setter Property="MaxHeight" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Mode=OneWay}"/>
		<Setter Property="MaxWidth" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Mode=OneWay}"/>-->
		
		<!--<Setter Property="MaxHeight" Value="{Binding ActualHeight, ElementName=This, Mode=OneWay}"/>-->
		<!--<Setter Property="MaxWidth" Value="{Binding ActualWidth, ElementName=This, Mode=OneWay}"/>-->
	
	</Style>

	
	<Style TargetType="{x:Type Window}">
		
		<Setter Value="15" Property="FontSize"/>
	</Style>
	
	<Style TargetType="{x:Type CheckBox}">
		<Setter Value="15" Property="FontSize"/>
	</Style>

	<Style TargetType="{x:Type ListBoxItem}">
		<Setter Value="0,5" Property="Margin"/>
		<Setter Value="2" Property="BorderThickness"/>
		<Setter Value="DodgerBlue" Property="BorderBrush"/>
	</Style>
	<Style TargetType="{x:Type ListBox}">
		<Setter Value="13" Property="FontSize"/>
	</Style>

	<Style TargetType="{x:Type ItemsControl}">
		<Setter Value="15" Property="FontSize"/>
	</Style>

	<Style TargetType="{x:Type TextBlock}">
		<Setter Value="15" Property="FontSize"/>
		
	</Style>
	
	<Style  TargetType="{x:Type TextBox}">
		
		<!--<Setter Property="HorizontalAlignment" Value="Left"/>-->
		
		<!--<Setter Value="{Binding Path=ActualWidth, Converter={StaticResource conv}, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
			 Property="Width"	>
		</Setter>-->
		
		<!--<Setter Property="MaxWidth">
			<Setter.Value>
				<MultiBinding Converter="{StaticResource conv}">
					<Binding Path="ActualWidth"/>
					<Binding />
				</MultiBinding>
			</Setter.Value>
		</Setter>-->
		
		<!--<Setter Property="Width" Value="Auto"/>-->
		<Setter Value="15" Property="FontSize"/>
		<Setter Value="Wrap" Property="TextWrapping"/>
		
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="true">
				<Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self}, 
                       Path=(Validation.Errors)[0].ErrorContent}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	
	
	
	<Style TargetType="{x:Type Button}">
		<Setter Value="15" Property="FontSize"/>
		
	</Style>
	
	<Style TargetType="{x:Type ComboBox}">
		<Setter Value="15" Property="FontSize"/>
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="true">
				<Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self}, 
                       Path=(Validation.Errors)[0].ErrorContent}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type PasswordBox}">
		<Setter Value="15" Property="FontSize"/>

		<Style.Triggers>
			<Trigger Property="Visibility" Value="Visible">
				<Setter Property="ToolTip"
                Value="Длинна пароля дожна состовлять от 8 до 32 символов и может содержать только английские буквы и цифры. "/>
			</Trigger>
		</Style.Triggers>

	</Style>

	<Style TargetType="{x:Type DatePicker}">
		<Setter Value="15" Property="FontSize"/>
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="true">
				<Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self}, 
                       Path=(Validation.Errors)[0].ErrorContent}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	
	<Style TargetType="{x:Type Border}">
		
		<Setter Property="BorderThickness" Value="2.5" />
		<Setter Property="BorderBrush" Value="LightGreen"/>
		<!--<Setter Value="0,0,50,0" Property="Margin"/>-->
		
	</Style>
	

</ResourceDictionary>